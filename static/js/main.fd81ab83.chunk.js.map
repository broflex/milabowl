{"version":3,"sources":["Api/AuthService.ts","Api/api.ts","theme.ts","Pages/DashboardPage.tsx","Pages/ProfilePage.tsx","Pages/MilaPlayerPage.tsx","Pages/StandingsPage.tsx","Pages/LoginPage.tsx","Navbar.tsx","Pages/AdminPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["agent","UserAgentApplication","auth","clientId","redirectUri","process","authority","cache","cacheLocation","storeAuthStateInCookie","getAccessTokenFromCache","a","acquireTokenSilent","scopes","accessToken","undefined","login","loginPopup","prompt","logout","getDecodedToken","token","jwt_decode","BASE_API_URI","GetMilaResults","axios","get","headers","Authorization","response","data","ImportData","status","ProcessData","theme","createMuiTheme","palette","primary","main","light","secondary","text","background","default","typography","fontFamily","join","h5","fontWeight","overrides","MuiCard","root","borderRadius","border","MuiCardHeader","content","flex","marginLeft","MuiTypography","color","MuiTableCell","head","shadows","NewsCard","title","playerName","Card","style","height","Grid","container","item","sm","xs","position","left","right","bottom","top","Box","display","flexDirection","alignItems","justifyContent","marginRight","textAlign","Avatar","width","alt","src","Typography","variant","fontSize","zIndex","CardContent","PlayerStandings","results","Toolbar","disableGutters","CardHeader","justifySelf","to","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","resultsByWeek","length","map","r","i","deltaPosition","milaRankLastWeek","milaRank","key","teamName","component","scope","ArrowDropDownOutlined","dark","ArrowDropUpOutlined","milaPoints","total","cumulativeAverageMilaPoints","cumulativeMilaPoints","chartColors","options","maintainAspectRatio","PlayerStandingsChart","chartData","labels","gameWeek","datasets","resultsByUser","label","toString","borderColor","backgroundColor","fill","lineTension","x","DashboardPage","useState","milaResults","setMilaResults","useEffect","getMilaResults","spacing","lg","ProfilePage","preferredUserName","setPreferredUserName","decodedToken","preferred_username","getProfile","teamname","totalCumulativeAverageMilaPoints","withRouter","match","setResults","res","resultsForPlayer","find","params","md","concat","sort","b","LightToolTip","withStyles","tooltip","warning","boxShadow","Tooltip","StandingsPage","currentGameWeek","setCurrentGameweek","overallScore","n1","n2","Select","value","marginBottom","onChange","event","Number","target","MenuItem","m","placement","gW69","yellowCard","redCard","benchFail","capFail","capKeep","capDef","minusIsPlus","increaseStreak","equalStreak","gwPositionScore","LoginPage","MenuButton","anchorEl","setAnchorEl","IconButton","onClick","e","currentTarget","Menu","open","Boolean","keepMounted","onClose","Link","roles","includes","isMilabowlAdmin","location","history","setAccessToken","isLoading","setIsLoading","AppBar","borderBottom","Container","maxWidth","textDecoration","padding","pathname","Button","push","AdminPage","isImporting","setIsImporting","isProcessing","setIsProcessing","disabled","CircularProgress","PrivateRoute","path","exact","App","isXsScreen","useMediaQuery","breakpoints","down","tokenFromCache","init","className","marginTop","MilaPlayerPage","window","hostname","ReactDOM","render","ThemeProvider","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fd81ab83.chunk.js","sourcesContent":["import { UserAgentApplication } from 'msal';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nconst BASE_WEB_URI: string = process.env.REACT_APP_BASE_WEB_URI as string;\r\nconst MILABOWL_ADMIN = \"MilabowlAdmin\";\r\n\r\nconst agent = new UserAgentApplication({\r\n    auth: {\r\n        clientId: 'aa6ccf30-b294-41fd-b522-995d5347e21b',\r\n        redirectUri: BASE_WEB_URI,\r\n        authority: 'https://login.microsoftonline.com/f5c98e5d-b164-4b19-8f0b-3ff85b5fff50',\r\n    },\r\n    cache: {\r\n        cacheLocation: 'localStorage',\r\n        storeAuthStateInCookie: true,\r\n    },\r\n});\r\n\r\nconst getAccessTokenFromCache = async (): Promise<string | undefined> => {\r\n    try {\r\n        const accessToken = await agent.acquireTokenSilent({\r\n            scopes: ['https://milab2c.onmicrosoft.com/883ff110-4bf9-40e7-b6a4-60f018ec9f22/MilabowlApi.Read'],\r\n        });\r\n\r\n        return accessToken.accessToken;\r\n    } catch (e) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nconst login = async (): Promise<string> => {\r\n    const resp = await agent.loginPopup({\r\n        scopes: ['openid', 'profile', 'user.read'],\r\n        prompt: 'select_account',\r\n    });\r\n\r\n    const accessToken = await agent.acquireTokenSilent({\r\n        scopes: ['https://milab2c.onmicrosoft.com/883ff110-4bf9-40e7-b6a4-60f018ec9f22/MilabowlApi.Read', 'user.read'],\r\n    });\r\n\r\n    return accessToken.accessToken;\r\n};\r\n\r\nconst logout = async (): Promise<void> => {\r\n    await agent.logout();\r\n};\r\n\r\nconst getDecodedToken = (token: string | undefined): DecodedToken | undefined => {\r\n    if(!token){\r\n        return undefined;\r\n    }\r\n\r\n    const decodedToken = jwt_decode<DecodedToken>(token);\r\n    return decodedToken;\r\n}\r\n\r\nconst isMilabowlAdmin = (token: string | undefined): boolean => {\r\n    const decodedToken = getDecodedToken(token);\r\n    if(!decodedToken){\r\n        return false;\r\n    }\r\n\r\n    return decodedToken.roles?.includes(MILABOWL_ADMIN);\r\n}\r\n\r\ninterface DecodedToken{\r\n    roles: string[];\r\n    preferred_username: string;\r\n\r\n}\r\n\r\nexport { login, logout, getAccessTokenFromCache, isMilabowlAdmin, getDecodedToken };\r\n","import axios from 'axios';\r\nimport { MilaResultsDTO } from './Dtos/ApiDtos';\r\nimport { getAccessTokenFromCache } from './AuthService';\r\n\r\nconst BASE_API_URI: string = process.env.REACT_APP_BASE_API_URI as string;\r\n\r\nexport async function GetMilaResults(): Promise<MilaResultsDTO> {\r\n  const token = await getAccessTokenFromCache();\r\n\r\n  const response = await axios.get<MilaResultsDTO>(`${BASE_API_URI}/api/milaresults`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  return response.data;\r\n}\r\n\r\nexport async function ImportData(): Promise<number> {\r\n  const token = await getAccessTokenFromCache();\r\n\r\n  const response = await axios.get<MilaResultsDTO>(`${BASE_API_URI}/api/dataimport`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  return response.status;\r\n}\r\n\r\nexport async function ProcessData(): Promise<number> {\r\n  const token = await getAccessTokenFromCache();\r\n\r\n  const response = await axios.get<MilaResultsDTO>(`${BASE_API_URI}/api/dataimport/process`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  return response.status;\r\n}\r\n\r\nexport const GetProfilePicture = async (): Promise<string> => {\r\n  const token = await getAccessTokenFromCache();\r\n\r\n  console.log(token);\r\n\r\n  const response = await axios.get<string>(`https://graph.microsoft.com/v1.0/me/photo`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  return response.data;\r\n}\r\n  ","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst primary = '#1BDB6B';\r\nconst primaryLight = '#D3EADC';\r\nconst secondary = '#1B4965';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: primary,\r\n      light: primaryLight,\r\n    },\r\n    secondary: {\r\n      main: secondary,\r\n    },\r\n    text: {\r\n      primary: '#394473',\r\n    },\r\n    background: {\r\n      default: '#F6F6F8',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Kumbh Sans', 'sans-serif',\r\n    ].join(','),\r\n    h5: {\r\n      fontWeight: 700,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiCard: {\r\n      root: {\r\n        borderRadius: '30px',\r\n        border: '1px solid rgba(0,0,0,0.03)',\r\n      },\r\n    },\r\n    MuiCardHeader: {\r\n      content: {\r\n        flex: 'none',\r\n        marginLeft: '5px',\r\n      },\r\n    },  \r\n    MuiTypography:{\r\n      root: {\r\n        color: '#394473'\r\n      }\r\n    },\r\n    MuiTableCell: {\r\n      head: {\r\n        fontWeight: 700,\r\n        background: primaryLight,\r\n      },\r\n    },\r\n\r\n  },\r\n  shadows: [\r\n    'none',\r\n    '0 4px 8px 0 rgba(0,0,0,0.02)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n  ],\r\n});\r\n\r\nexport default theme;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n    Card, Box, CardContent, Toolbar, CardHeader, Table,\r\n    TableHead, TableBody, TableCell, TableRow, TableContainer, Typography, Avatar, Button,\r\n} from '@material-ui/core';\r\nimport { Line as LineChart } from 'react-chartjs-2';\r\nimport { Link } from 'react-router-dom';\r\nimport { GetMilaResults } from '../Api/api';\r\nimport { MilaResultsDTO } from '../Api/Dtos/ApiDtos';\r\nimport theme from '../theme';\r\nimport { ArrowDropDownOutlined, ArrowDropUpOutlined } from '@material-ui/icons';\r\n\r\ninterface NewsCardProps {\r\n    title: string;\r\n    playerName: string;\r\n    content: string;\r\n    color: string;\r\n}\r\n\r\nconst NewsCard = ({\r\n    title, playerName, content, color,\r\n}: NewsCardProps) => (\r\n        <Card style={{ height: '130px' }}>\r\n            <Grid container style={{ height: '100%' }}>\r\n                <Grid item sm={4} xs={12} style={{ background: color, position: 'relative' }}>\r\n                    <div style={{\r\n                        position: 'absolute', left: 0, right: 0, bottom: 0, top: '55%', background: 'rgba(0,0,0,0.3)',\r\n                    }}></div>\r\n                    <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\"\r\n                        height=\"100%\"\r\n                        marginLeft=\"10px\"\r\n                        marginRight=\"10px\"\r\n                        textAlign=\"center\"\r\n                    >\r\n                        <Avatar style={{ height: 75, width: 75 }} alt=\"Remy Sharp\" src=\"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50\" />\r\n                        <Typography variant=\"h5\" style={{\r\n                            fontSize: '16px', fontWeight: 700, color: 'white', zIndex: 1,\r\n                        }}>\r\n                            {title}\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item sm={8} xs={12}>\r\n                    <CardContent>\r\n                        {playerName}\r\n                        {content}\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </Card>\r\n    );\r\n\r\ninterface PlayerStandingsProps {\r\n    results: MilaResultsDTO;\r\n}\r\n\r\nconst PlayerStandings = ({ results }: PlayerStandingsProps) => (\r\n    <Card style={{ height: '100%' }}>\r\n        <Toolbar disableGutters>\r\n            <CardHeader title=\"Standings\" />\r\n\r\n            <section style={{ marginLeft: 'auto', marginRight: '20px' }}>\r\n                <Link style={{ justifySelf: 'flex-end' }} to=\"/standings\">See More</Link>\r\n            </section>\r\n        </Toolbar>\r\n\r\n        <CardContent>\r\n            <TableContainer>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Rank</TableCell>\r\n                            <TableCell>Team</TableCell>\r\n                            <TableCell align=\"right\">GW</TableCell>\r\n                            <TableCell align=\"right\">Avg</TableCell>\r\n                            <TableCell align=\"right\">Total Score</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            results.resultsByWeek[results.resultsByWeek.length - 1]\r\n                                .results.map((r, i) => {\r\n                                    const deltaPosition = r.milaRankLastWeek === null || r.milaRankLastWeek === undefined ? 0 : (r.milaRankLastWeek - r.milaRank);\r\n                                    return (\r\n                                        <TableRow key={r.teamName}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                <Box display=\"flex\" alignItems=\"center\">\r\n                                                    {`${i + 1}.`}\r\n                                                    {\r\n                                                        deltaPosition < 0 &&\r\n                                                        <Box display=\"flex\" alignItems=\"center\"\r\n                                                            style={{ color: \"red\" }}>\r\n                                                            <ArrowDropDownOutlined />\r\n                                                            ({deltaPosition})\r\n                                                        </Box>\r\n                                                    }\r\n                                                    {\r\n                                                        deltaPosition > 0 &&\r\n                                                        <Box display=\"flex\" alignItems=\"center\"\r\n                                                            style={{ color: theme.palette.primary.dark }}>\r\n                                                            <ArrowDropUpOutlined />\r\n                                                            ({deltaPosition})\r\n                                                        </Box>\r\n                                                    }\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <Link style={{ color: theme.palette.text.primary }} to={`/mila-player/${r.teamName}`}>{r.teamName}</Link>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {r.milaPoints.total}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {r.cumulativeAverageMilaPoints}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {r.cumulativeMilaPoints}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nconst chartColors: string[] = [\r\n    '#003f5c', '#2f4b7c', '#665191', '#a05195', '#d45087',\r\n    '#f95d6a', '#ff7c43', '#ffa600', '#488f31',\r\n];\r\n\r\nconst options = {\r\n    maintainAspectRatio: false,\r\n};\r\n\r\ninterface PlayerStandingsChartProps {\r\n    results: MilaResultsDTO;\r\n}\r\n\r\nconst PlayerStandingsChart = ({ results }: PlayerStandingsChartProps) => {\r\n    const weeks = results.resultsByWeek.map((r) => r.gameWeek);\r\n    const datasets = results.resultsByUser.map((r, i) => ({\r\n        label: r.teamName.toString(),\r\n        borderColor: chartColors[i],\r\n        backgroundColor: chartColors[i],\r\n        fill: false,\r\n        lineTension: 0,\r\n        data: r.results.map((x) => x.cumulativeAverageMilaPoints),\r\n    }));\r\n    const chartData = {\r\n        labels: weeks,\r\n        datasets,\r\n    };\r\n\r\n    return (\r\n        <Card style={{ height: '100%' }}>\r\n            <CardHeader title=\"Rank Over Time\" />\r\n            <CardContent style={{height: \"55vh\"}}>\r\n                <LineChart data={chartData} options={options} />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst DashboardPage = () => {\r\n    const [milaResults, setMilaResults] = useState<MilaResultsDTO | undefined>();\r\n\r\n    useEffect(() => {\r\n        async function getMilaResults() {\r\n            const results = await GetMilaResults();\r\n            setMilaResults(results);\r\n        }\r\n\r\n        getMilaResults();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {!milaResults && (\r\n                <div>loading...</div>\r\n            )}\r\n            {milaResults && (\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={3} xs={12}>\r\n                        <NewsCard color=\"#1BDB6B\" title=\"Play of the Week\" playerName=\"\" content=\"Formula Won leaving 27 points on the bench\" />\r\n                    </Grid>\r\n                    <Grid item lg={3} xs={12}>\r\n                        <NewsCard color=\"#6556A4\" title=\"Current Leader\" playerName=\"\" content={milaResults.resultsByWeek[milaResults.resultsByWeek.length - 1].results[0].teamName} />\r\n                    </Grid>\r\n                    <Grid item lg={3} xs={12}>\r\n                        <NewsCard color=\"#6556A4\" title=\"Current Looser\" playerName=\"\"\r\n                            content={\r\n                                milaResults.resultsByWeek[milaResults.resultsByWeek.length - 1]\r\n                                    .results[milaResults.resultsByWeek[milaResults.resultsByWeek.length - 1].results.length - 1].teamName} />\r\n                    </Grid>\r\n                    <Grid item lg={3} xs={12}>\r\n                        <NewsCard color=\"#F2DE74\" title=\"Reigning Champ\" playerName=\"\" content=\"Eivind won the first ever Milabowl season 19/20\" />\r\n                    </Grid>\r\n                    <Grid item lg={5} xs={12}>\r\n                        <PlayerStandings results={milaResults} />\r\n                    </Grid>\r\n                    <Grid item lg={7} xs={12}>\r\n                        <PlayerStandingsChart results={milaResults} />\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import { Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAccessTokenFromCache, getDecodedToken } from '../Api/AuthService';\r\nimport { GetProfilePicture } from '../Api/api';\r\n\r\nconst ProfilePage = () => {\r\n    const [preferredUserName, setPreferredUserName] = useState<string | undefined>();\r\n    useEffect(() => {\r\n        async function getProfile() {\r\n            const accessToken = await getAccessTokenFromCache();\r\n            const decodedToken = getDecodedToken(accessToken);\r\n            setPreferredUserName(decodedToken?.preferred_username);\r\n            // const profilePicture = await GetProfilePicture();\r\n            // console.log(profilePicture);\r\n        }\r\n\r\n        getProfile();\r\n    },\r\n    []);\r\n    return(\r\n    <div>\r\n        <Typography variant=\"h6\">\r\n            {preferredUserName}\r\n        </Typography>\r\n    </div>\r\n)};\r\n\r\nexport default ProfilePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GetMilaResults } from '../Api/api';\r\nimport { GameWeekResult, MilaResultsDTO } from '../Api/Dtos/ApiDtos';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { Card, CardContent, CardHeader, Grid, Table, TableBody, TableCell, TableHead, TableRow, Typography } from '@material-ui/core';\r\nimport { Line as LineChart } from 'react-chartjs-2';\r\n\r\nconst chartColors: string[] = [\r\n    '#003f5c', '#2f4b7c', '#665191', '#a05195', '#d45087',\r\n    '#f95d6a', '#ff7c43', '#ffa600', '#488f31',\r\n];\r\n\r\ninterface PlayerStandingsChartProps {\r\n    results: GameWeekResult[] | undefined;\r\n    teamname: string;\r\n}\r\n\r\nconst PlayerStandingsChart = ({ results, teamname }: PlayerStandingsChartProps) => {\r\n    const weeks = results?.map((r, i) => r.gameWeek);\r\n    const datasets = [{\r\n        label: teamname,\r\n        borderColor: chartColors[0],\r\n        backgroundColor: chartColors[0],\r\n        fill: false,\r\n        lineTension: 0,\r\n        data: results?.map((x) => x.cumulativeAverageMilaPoints),\r\n    },\r\n    {\r\n        label: \"Average\",\r\n        borderColor: chartColors[7],\r\n        backgroundColor: chartColors[7],\r\n        fill: false,\r\n        lineTension: 0,\r\n        data: results?.map((x) => x.totalCumulativeAverageMilaPoints),\r\n    }];\r\n\r\n    const chartData = {\r\n        labels: weeks,\r\n        datasets,\r\n    };\r\n\r\n    const options = {\r\n\r\n    };\r\n\r\n    return (\r\n        <Card style={{ height: '100%' }}>\r\n            <CardHeader title=\"Avg Points\" />\r\n            <CardContent>\r\n                <LineChart data={chartData} options={options} />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\ninterface RouterProps {\r\n    teamname: string;\r\n}\r\n\r\nconst MilaPlayerPage = ({ match }: RouteComponentProps<RouterProps>) => {\r\n    const [results, setResults] = useState<GameWeekResult[] | undefined>();\r\n\r\n    useEffect(() => {\r\n        async function getMilaResults() {\r\n            const res = await GetMilaResults();\r\n            const resultsForPlayer = res?.resultsByUser\r\n                .find(r => r.teamName === match.params.teamname)?.results\r\n            setResults(resultsForPlayer);\r\n        }\r\n\r\n        getMilaResults();\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item md={4}>\r\n                <Card style={{ height: \"100%\" }}>\r\n                    <CardHeader title={match.params.teamname} />\r\n                    <CardContent>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>GW</TableCell>\r\n                                    <TableCell align=\"right\">Pts</TableCell>\r\n                                    <TableCell align=\"right\">Avg</TableCell>\r\n                                    <TableCell align=\"right\">Tot</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    results?.concat()\r\n                                        .sort((a: GameWeekResult, b: GameWeekResult) => b.gameWeek - a.gameWeek)\r\n                                        .map(r => (\r\n                                            <TableRow key={r.gameWeek}>\r\n                                                <TableCell>{`Game Week ${r.gameWeek}`}</TableCell>\r\n                                                <TableCell align=\"right\">{r.milaPoints.total}</TableCell>\r\n                                                <TableCell align=\"right\">{r.cumulativeAverageMilaPoints}</TableCell>\r\n                                                <TableCell align=\"right\">{r.cumulativeMilaPoints}</TableCell>\r\n                                            </TableRow>\r\n                                        ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item md={8}>\r\n                <PlayerStandingsChart\r\n                    results={results}\r\n                    teamname={match.params.teamname} />\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default withRouter(MilaPlayerPage);","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Card, CardContent, CardHeader, Table, TableHead,\r\n    TableBody, TableCell, TableRow, TableContainer, Box, Select, MenuItem, Toolbar, Tooltip\r\n} from '@material-ui/core';\r\nimport { MilaResultsDTO } from '../Api/Dtos/ApiDtos';\r\nimport { GetMilaResults } from '../Api/api';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { ArrowDropDownOutlined, ArrowDropUpOutlined } from '@material-ui/icons';\r\nimport theme from '../theme';\r\n\r\nconst LightToolTip = withStyles((theme) => ({\r\n    tooltip: {\r\n        //backgroundColor: theme.palette.common.white,\r\n        backgroundColor: theme.palette.warning.light,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 11,\r\n    },\r\n}))(Tooltip);\r\n\r\nconst StandingsPage = () => {\r\n    const [milaResults, setMilaResults] = useState<MilaResultsDTO | undefined>();\r\n    const [currentGameWeek, setCurrentGameweek] = useState(0);\r\n    const results = currentGameWeek === 0\r\n        ? milaResults?.overallScore\r\n        : milaResults?.resultsByWeek[currentGameWeek - 1]?.results;\r\n\r\n    results?.sort((n1, n2) => n2.cumulativeMilaPoints - n1.cumulativeMilaPoints);\r\n\r\n    useEffect(() => {\r\n        async function getMilaResults(): Promise<void> {\r\n            const res = await GetMilaResults();\r\n            setMilaResults(res);\r\n        }\r\n\r\n        getMilaResults();\r\n    }, []);\r\n\r\n    return (\r\n        <Card style={{ height: '100%' }}>\r\n            <Toolbar disableGutters>\r\n                <CardHeader title={`Standings - ${currentGameWeek === 0 ? 'Overall' : (`Game Week ${currentGameWeek}`)}`} />\r\n\r\n                <section style={{ marginLeft: 'auto', marginRight: '20px' }}>\r\n                    <Select\r\n                        value={currentGameWeek}\r\n                        style={{ marginBottom: '10px' }}\r\n                        onChange={(event: React.ChangeEvent<{\r\n                            name?: string | undefined;\r\n                            value: unknown;\r\n                        }>): void => setCurrentGameweek(Number(event.target.value))}\r\n                    >\r\n                        <MenuItem value={0}>Overall</MenuItem>\r\n                        {\r\n                            milaResults?.resultsByWeek\r\n                                .map((m) => (\r\n                                    <MenuItem key={m.gameWeek} value={m.gameWeek}>Game Week {m.gameWeek}</MenuItem>\r\n                                ))\r\n                        }\r\n                    </Select>\r\n                </section>\r\n            </Toolbar>\r\n\r\n            <CardContent>\r\n                <TableContainer>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Rank</TableCell>\r\n                                <TableCell>Team</TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Sweet 69: 6.9 pts if GW Score is 69\" placement=\"top\"><div>69</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Yellow Card: 1 pt each\" placement=\"top\"><div>YC</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Red Card: 3 pts each\" placement=\"top\"><div>RC</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Bench Fail: -1 pt per 5 pts on bench\" placement=\"top\"><div>BF</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Cap Fail: -1 pt if captain scores less than 5 pts\" placement=\"top\"><div>CF</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Cap GoalKeeper: 2 pts\" placement=\"top\"><div>CK</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Cap Defender: 1 pt\" placement=\"top\"><div>CD</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Minus is Plus: every negative point is positive\" placement=\"top\"><div>MiP</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Increase Streak: 1 pt if higher score than previous GW\" placement=\"top\"><div>IS</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Equal Streak: 6.9 pts if same score as previous GW\" placement=\"top\"><div>ES</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"GW Position Score: 4 pts FPL GW winner, then decreasing with 0.5\" placement=\"top\"><div>GW PS</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"GW Mila Points\" placement=\"top\"><div>GW MP</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"right\"><LightToolTip title=\"Total Mila Points\" placement=\"top\"><div>Total MP</div></LightToolTip></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                results\r\n                                && results.map((r, i) => {\r\n                                    const deltaPosition = r.milaRankLastWeek === null || r.milaRankLastWeek === undefined ? 0 : (r.milaRankLastWeek - r.milaRank);\r\n                                    return (\r\n                                        <TableRow key={r.teamName}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                <Box display=\"flex\" alignItems=\"center\">\r\n                                                    {`${i + 1}.`}\r\n                                                    {\r\n                                                        deltaPosition < 0 &&\r\n                                                        <Box display=\"flex\" alignItems=\"center\"\r\n                                                            style={{ color: \"red\" }}>\r\n                                                            <ArrowDropDownOutlined />\r\n                                                            ({deltaPosition})\r\n                                                        </Box>\r\n                                                    }\r\n                                                    {\r\n                                                        deltaPosition > 0 &&\r\n                                                        <Box display=\"flex\" alignItems=\"center\"\r\n                                                            style={{ color: theme.palette.primary.dark }}>\r\n                                                            <ArrowDropUpOutlined />\r\n                                                            ({deltaPosition})\r\n                                                        </Box>\r\n                                                    }\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                {r.teamName}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.gW69}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.yellowCard}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.redCard}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.benchFail}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.capFail}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.capKeep}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.capDef}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.minusIsPlus}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.increaseStreak}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.equalStreak}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.gwPositionScore}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.total}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {r.cumulativeMilaPoints}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default StandingsPage;\r\n","import React from 'react';\r\n\r\nconst LoginPage = () => (\r\n    <div>\r\n        You need to log in!\r\n    </div>\r\n);\r\n\r\nexport default LoginPage;\r\n","import React, { useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { Container, Typography, Button, IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport theme from './theme';\r\nimport { login, logout, isMilabowlAdmin } from './Api/AuthService';\r\nimport Person from '@material-ui/icons/Person'\r\n\r\ninterface NavbarProps{\r\n  setAccessToken: React.Dispatch<React.SetStateAction<string | undefined>>;\r\n  accessToken: string | undefined;\r\n}\r\n\r\ninterface MenuButtonProps{\r\n  accessToken: string;\r\n}\r\n\r\nconst MenuButton = ({ accessToken }: MenuButtonProps) => {\r\n  const [anchorEl, setAnchorEl] = useState<Element | ((element: Element) => Element) | null | undefined>(null);\r\n  return(\r\n    <>\r\n      <IconButton onClick={(e) => { setAnchorEl(e.currentTarget);}}>\r\n        <Person color=\"secondary\"/>\r\n      </IconButton>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        keepMounted\r\n        onClose={() => setAnchorEl(null)}\r\n      >\r\n        <MenuItem onClick={() => setAnchorEl(null)} component={Link} to=\"/profile\">Profile</MenuItem>\r\n        { isMilabowlAdmin(accessToken) && <MenuItem onClick={() => setAnchorEl(null)} component={Link} to=\"/admin\">Admin</MenuItem> }\r\n        <MenuItem onClick={() => logout()}>Log Out</MenuItem>\r\n      </Menu>\r\n    </>\r\n)};\r\n\r\nconst Navbar = ({\r\n  location, history, setAccessToken, accessToken,\r\n}: NavbarProps & RouteComponentProps) => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  return (\r\n    <AppBar position=\"static\" style={{ background: theme.palette.background.default, boxShadow: 'none', borderBottom: 'none' }}>\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n            <Typography color=\"textPrimary\" style={{ textDecoration: 'none' }} component={Link} to=\"/\" variant=\"h5\">\r\n              Milabowl\r\n            </Typography>\r\n            <section style={{ marginLeft: 'auto' }}>\r\n              <Typography color=\"textPrimary\" style={{\r\n                textDecoration: 'none',\r\n                fontWeight: 700,\r\n                padding: '10px',\r\n                borderRadius: '10px',\r\n                background: location.pathname === '/standings' ? 'rgba(0,0,0,0.05)' : 'none',\r\n              }} component={Link} to=\"standings\">\r\n                Standings\r\n              </Typography>      \r\n              {\r\n                !accessToken && !isLoading\r\n                && <Button onClick={async () => {\r\n                  setIsLoading(true);\r\n                  const token = await login();\r\n                  setAccessToken(token);\r\n                  setIsLoading(false);\r\n                  history.push('/');\r\n                }}>\r\n                    Log in\r\n                </Button>\r\n              }\r\n              {\r\n                accessToken && !isLoading\r\n                && (\r\n                  <MenuButton accessToken={accessToken}/> \r\n                )\r\n              }\r\n            </section>\r\n        </Toolbar>\r\n      </Container>\r\n  </AppBar>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import React, { useState } from 'react';\r\nimport { Card, CardHeader, CardContent, Button, Grid, CircularProgress } from '@material-ui/core';\r\nimport { ImportData, ProcessData } from '../Api/api';\r\n\r\nconst AdminPage = () => {\r\n    const [isImporting, setIsImporting] = useState(false);\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader title=\"Admin Panel\"></CardHeader>\r\n            <CardContent>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            onClick={async () => { setIsImporting(true); await ImportData(); setIsImporting(false) }}\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                            disabled={isImporting}\r\n                        >\r\n                            Import Data\r\n                        </Button>\r\n                        {isImporting && <CircularProgress color=\"secondary\" />}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            onClick={async () => { setIsProcessing(true); await ProcessData(); setIsProcessing(false) }}\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                            disabled={isProcessing}\r\n                        >\r\n                            Process Data\r\n                        </Button>\r\n                        {isProcessing && <CircularProgress color=\"secondary\" />}\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default AdminPage;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router, Switch, Route, Redirect, RouteComponentProps\r\n} from 'react-router-dom';\r\nimport Container from '@material-ui/core/Container';\r\nimport DashboardPage from './Pages/DashboardPage';\r\nimport ProfilePage from './Pages/ProfilePage';\r\nimport MilaPlayerPage from './Pages/MilaPlayerPage';\r\nimport StandingsPage from './Pages/StandingsPage';\r\nimport LoginPage from './Pages/LoginPage';\r\nimport Navbar from './Navbar';\r\nimport theme from './theme';\r\nimport { getAccessTokenFromCache } from './Api/AuthService';\r\nimport AdminPage from './Pages/AdminPage';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\ninterface PrivateRouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n  path: string;\r\n  exact?: boolean;\r\n  accessToken: string | undefined;\r\n}\r\n\r\nconst PrivateRoute = ({\r\n  component, path, exact, accessToken,\r\n}: PrivateRouteProps) => (\r\n    <>\r\n      {accessToken && <Route path={path} component={component} exact={exact} />}\r\n      {!accessToken && <Redirect to=\"login\" />}\r\n    </>\r\n  );\r\n\r\nfunction App() {\r\n  const [accessToken, setAccessToken] = useState<string | undefined>();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const isXsScreen = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  useEffect(() => {\r\n    const init = async (): Promise<void> => {\r\n      setIsLoading(true);\r\n      const tokenFromCache = await getAccessTokenFromCache();\r\n      setAccessToken(tokenFromCache);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\" style={{ background: theme.palette.background.default }}>\r\n        <Navbar setAccessToken={setAccessToken} accessToken={accessToken} />\r\n        <Container maxWidth=\"xl\" disableGutters={isXsScreen} style={{ marginTop: '20px' }}>\r\n          <Switch>\r\n            <Route accessToken={accessToken} exact path=\"/login\" component={LoginPage} />\r\n\r\n            {!isLoading && (\r\n              <>\r\n                <PrivateRoute accessToken={accessToken} exact path=\"/\" component={DashboardPage} />\r\n                <PrivateRoute accessToken={accessToken} path=\"/standings\" component={StandingsPage} />\r\n                <PrivateRoute accessToken={accessToken} path=\"/profile\" component={ProfilePage} />\r\n                <PrivateRoute accessToken={accessToken} path=\"/admin\" component={AdminPage} />\r\n                <PrivateRoute accessToken={accessToken} path=\"/mila-player/:teamname\" component={MilaPlayerPage} />\r\n              </>\r\n            )}\r\n          </Switch>\r\n        </Container>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </ThemeProvider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}