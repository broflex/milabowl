{"version":3,"sources":["Api/api.ts","theme.ts","Pages/DashboardPage.tsx","Pages/MilaPlayerPage.tsx","Pages/StandingsPage.tsx","Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["GetMilaResults","game_state","theme","createMuiTheme","palette","primary","main","light","secondary","text","background","default","typography","fontFamily","join","h5","fontWeight","overrides","MuiCard","root","borderRadius","border","MuiCardHeader","content","flex","marginLeft","MuiTypography","color","MuiTableCell","head","shadows","NewsCard","title","playerName","Card","style","height","Grid","container","item","sm","xs","position","left","right","bottom","top","Box","display","flexDirection","alignItems","justifyContent","marginRight","textAlign","Avatar","width","alt","src","Typography","variant","fontSize","zIndex","CardContent","PlayerStandings","results","Toolbar","disableGutters","CardHeader","justifySelf","to","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","resultsByWeek","length","map","r","i","deltaPosition","milaRankLastWeek","undefined","milaRank","key","teamName","component","scope","ArrowDropDownOutlined","dark","ArrowDropUpOutlined","milaPoints","total","cumulativeAverageMilaPoints","cumulativeMilaPoints","chartColors","options","maintainAspectRatio","PlayerStandingsChart","chartData","labels","gameWeek","datasets","resultsByUser","label","toString","borderColor","backgroundColor","fill","lineTension","data","x","DashboardPage","useState","milaResults","setMilaResults","useEffect","console","log","getMilaResults","spacing","lg","teamname","totalCumulativeAverageMilaPoints","withRouter","match","setResults","res","resultsForPlayer","find","params","md","concat","sort","a","b","LightToolTip","withStyles","tooltip","warning","boxShadow","Tooltip","StandingsPage","currentGameWeek","setCurrentGameweek","overallScore","n1","n2","Select","value","marginBottom","onChange","event","Number","target","MenuItem","m","placement","gW69","yellowCard","redCard","benchFail","capFail","capKeep","capDef","minusIsPlus","increaseStreak","equalStreak","gwPositionScore","headToHeadMeta","sixtyNineSub","uniqueCap","trendyBitch","location","AppBar","borderBottom","Container","maxWidth","textDecoration","Link","padding","pathname","App","isXsScreen","useMediaQuery","breakpoints","down","className","marginTop","exact","path","MilaPlayerPage","Boolean","window","hostname","ReactDOM","render","ThemeProvider","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a3c06d4a.chunk.js","sourcesContent":["import { MilaResultsDTO } from './Dtos/ApiDtos';\r\nimport game_state from '../game_state.json';\r\n\r\nexport async function GetMilaResults(): Promise<MilaResultsDTO> {\r\n  //@ts-ignore\r\n  return game_state;\r\n}","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst primary = '#1BDB6B';\r\nconst primaryLight = '#D3EADC';\r\nconst secondary = '#1B4965';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: primary,\r\n      light: primaryLight,\r\n    },\r\n    secondary: {\r\n      main: secondary,\r\n    },\r\n    text: {\r\n      primary: '#394473',\r\n    },\r\n    background: {\r\n      default: '#F6F6F8',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Kumbh Sans', 'sans-serif',\r\n    ].join(','),\r\n    h5: {\r\n      fontWeight: 700,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiCard: {\r\n      root: {\r\n        borderRadius: '30px',\r\n        border: '1px solid rgba(0,0,0,0.03)',\r\n      },\r\n    },\r\n    MuiCardHeader: {\r\n      content: {\r\n        flex: 'none',\r\n        marginLeft: '5px',\r\n      },\r\n    },  \r\n    MuiTypography:{\r\n      root: {\r\n        color: '#394473'\r\n      }\r\n    },\r\n    MuiTableCell: {\r\n      head: {\r\n        fontWeight: 700,\r\n        background: primaryLight,\r\n      },\r\n    },\r\n\r\n  },\r\n  shadows: [\r\n    'none',\r\n    '0 4px 8px 0 rgba(0,0,0,0.02)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n  ],\r\n});\r\n\r\nexport default theme;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n    Card, Box, CardContent, Toolbar, CardHeader, Table,\r\n    TableHead, TableBody, TableCell, TableRow, TableContainer, Typography, Avatar, Button,\r\n} from '@material-ui/core';\r\nimport { Line as LineChart } from 'react-chartjs-2';\r\nimport { Link } from 'react-router-dom';\r\nimport { GetMilaResults } from '../Api/api';\r\nimport { MilaResultsDTO } from '../Api/Dtos/ApiDtos';\r\nimport theme from '../theme';\r\nimport { ArrowDropDownOutlined, ArrowDropUpOutlined } from '@material-ui/icons';\r\n\r\ninterface NewsCardProps {\r\n    title: string;\r\n    playerName: string;\r\n    content: string;\r\n    color: string;\r\n}\r\n\r\nconst NewsCard = ({\r\n    title, playerName, content, color,\r\n}: NewsCardProps) => (\r\n        <Card style={{ height: '130px' }}>\r\n            <Grid container style={{ height: '100%' }}>\r\n                <Grid item sm={4} xs={12} style={{ background: color, position: 'relative' }}>\r\n                    <div style={{\r\n                        position: 'absolute', left: 0, right: 0, bottom: 0, top: '55%', background: 'rgba(0,0,0,0.3)',\r\n                    }}></div>\r\n                    <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\"\r\n                        height=\"100%\"\r\n                        marginLeft=\"10px\"\r\n                        marginRight=\"10px\"\r\n                        textAlign=\"center\"\r\n                    >\r\n                        <Avatar style={{ height: 75, width: 75 }} alt=\"Remy Sharp\" src=\"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50\" />\r\n                        <Typography variant=\"h5\" style={{\r\n                            fontSize: '16px', fontWeight: 700, color: 'white', zIndex: 1,\r\n                        }}>\r\n                            {title}\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item sm={8} xs={12}>\r\n                    <CardContent>\r\n                        {playerName}\r\n                        {content}\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </Card>\r\n    );\r\n\r\ninterface PlayerStandingsProps {\r\n    results: MilaResultsDTO;\r\n}\r\n\r\nconst PlayerStandings = ({ results }: PlayerStandingsProps) => (\r\n    <Card style={{ height: '100%' }}>\r\n        <Toolbar disableGutters>\r\n            <CardHeader title=\"Standings\" />\r\n\r\n            <section style={{ marginLeft: 'auto', marginRight: '20px' }}>\r\n                <Link style={{ justifySelf: 'flex-end' }} to=\"/standings\">See More</Link>\r\n            </section>\r\n        </Toolbar>\r\n\r\n        <CardContent>\r\n            <TableContainer>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Rank</TableCell>\r\n                            <TableCell>Team</TableCell>\r\n                            <TableCell align=\"right\">GW</TableCell>\r\n                            <TableCell align=\"right\">Avg</TableCell>\r\n                            <TableCell align=\"right\">Total Score</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            results.resultsByWeek[results.resultsByWeek.length - 1]\r\n                                .results.map((r, i) => {\r\n                                    const deltaPosition = r.milaRankLastWeek === null || r.milaRankLastWeek === undefined ? 0 : (r.milaRankLastWeek - r.milaRank);\r\n                                    return (\r\n                                        <TableRow key={r.teamName}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                <Box display=\"flex\" alignItems=\"center\">\r\n                                                    {`${i + 1}.`}\r\n                                                    {\r\n                                                        deltaPosition < 0 &&\r\n                                                        <Box display=\"flex\" alignItems=\"center\"\r\n                                                            style={{ color: \"red\" }}>\r\n                                                            <ArrowDropDownOutlined />\r\n                                                            ({deltaPosition})\r\n                                                        </Box>\r\n                                                    }\r\n                                                    {\r\n                                                        deltaPosition > 0 &&\r\n                                                        <Box display=\"flex\" alignItems=\"center\"\r\n                                                            style={{ color: theme.palette.primary.dark }}>\r\n                                                            <ArrowDropUpOutlined />\r\n                                                            ({deltaPosition})\r\n                                                        </Box>\r\n                                                    }\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <Link style={{ color: theme.palette.text.primary }} to={`/mila-player/${r.teamName}`}>{r.teamName}</Link>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {r.milaPoints.total}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {r.cumulativeAverageMilaPoints}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {r.cumulativeMilaPoints}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nconst chartColors: string[] = [\r\n    '#003f5c', '#2f4b7c', '#665191', '#a05195', '#d45087',\r\n    '#f95d6a', '#ff7c43', '#ffa600', '#488f31',\r\n];\r\n\r\nconst options = {\r\n    maintainAspectRatio: false,\r\n};\r\n\r\ninterface PlayerStandingsChartProps {\r\n    results: MilaResultsDTO;\r\n}\r\n\r\nconst PlayerStandingsChart = ({ results }: PlayerStandingsChartProps) => {\r\n    const weeks = results.resultsByWeek.map((r) => r.gameWeek);\r\n    const datasets = results.resultsByUser.map((r, i) => ({\r\n        label: r.teamName.toString(),\r\n        borderColor: chartColors[i],\r\n        backgroundColor: chartColors[i],\r\n        fill: false,\r\n        lineTension: 0,\r\n        data: r.results.map((x) => x.cumulativeAverageMilaPoints),\r\n    }));\r\n    const chartData = {\r\n        labels: weeks,\r\n        datasets,\r\n    };\r\n\r\n    return (\r\n        <Card style={{ height: '100%' }}>\r\n            <CardHeader title=\"Rank Over Time\" />\r\n            <CardContent style={{height: \"55vh\"}}>\r\n                <LineChart data={chartData} options={options} />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst DashboardPage = () => {\r\n    const [milaResults, setMilaResults] = useState<MilaResultsDTO | undefined>();\r\n\r\n    useEffect(() => {\r\n        async function getMilaResults() {\r\n            const results = await GetMilaResults();\r\n            console.log(results);\r\n\r\n            setMilaResults(results);\r\n        }\r\n\r\n        getMilaResults();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {!milaResults && (\r\n                <div>loading...</div>\r\n            )}\r\n            {milaResults && (\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={3} xs={12}>\r\n                        <NewsCard color=\"#1BDB6B\" title=\"Play of the Week\" playerName=\"\" content=\"Formula Won leaving 27 points on the bench\" />\r\n                    </Grid>\r\n                    <Grid item lg={3} xs={12}>\r\n                        <NewsCard color=\"#6556A4\" title=\"Current Leader\" playerName=\"\" content={milaResults.resultsByWeek[milaResults.resultsByWeek.length - 1].results[0].teamName} />\r\n                    </Grid>\r\n                    <Grid item lg={3} xs={12}>\r\n                        <NewsCard color=\"#6556A4\" title=\"Current Looser\" playerName=\"\"\r\n                            content={\r\n                                milaResults.resultsByWeek[milaResults.resultsByWeek.length - 1]\r\n                                    .results[milaResults.resultsByWeek[milaResults.resultsByWeek.length - 1].results.length - 1].teamName} />\r\n                    </Grid>\r\n                    <Grid item lg={3} xs={12}>\r\n                        <NewsCard color=\"#F2DE74\" title=\"Reigning Champ\" playerName=\"\" content=\"Eivind won the first ever Milabowl season 19/20\" />\r\n                    </Grid>\r\n                    <Grid item lg={5} xs={12}>\r\n                        <PlayerStandings results={milaResults} />\r\n                    </Grid>\r\n                    <Grid item lg={7} xs={12}>\r\n                        <PlayerStandingsChart results={milaResults} />\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { GetMilaResults } from '../Api/api';\r\nimport { GameWeekResult } from '../Api/Dtos/ApiDtos';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { Card, CardContent, CardHeader, Grid, Table, TableBody, TableCell, TableHead, TableRow, Typography } from '@material-ui/core';\r\nimport { Line as LineChart } from 'react-chartjs-2';\r\n\r\nconst chartColors: string[] = [\r\n    '#003f5c', '#2f4b7c', '#665191', '#a05195', '#d45087',\r\n    '#f95d6a', '#ff7c43', '#ffa600', '#488f31',\r\n];\r\n\r\ninterface PlayerStandingsChartProps {\r\n    results: GameWeekResult[] | undefined;\r\n    teamname: string;\r\n}\r\n\r\nconst PlayerStandingsChart = ({ results, teamname }: PlayerStandingsChartProps) => {\r\n    const weeks = results?.map((r, i) => r.gameWeek);\r\n    const datasets = [{\r\n        label: teamname,\r\n        borderColor: chartColors[0],\r\n        backgroundColor: chartColors[0],\r\n        fill: false,\r\n        lineTension: 0,\r\n        data: results?.map((x) => x.cumulativeAverageMilaPoints),\r\n    },\r\n    {\r\n        label: \"Average\",\r\n        borderColor: chartColors[7],\r\n        backgroundColor: chartColors[7],\r\n        fill: false,\r\n        lineTension: 0,\r\n        data: results?.map((x) => x.totalCumulativeAverageMilaPoints),\r\n    }];\r\n\r\n    const chartData = {\r\n        labels: weeks,\r\n        datasets,\r\n    };\r\n\r\n    const options = {\r\n\r\n    };\r\n\r\n    return (\r\n        <Card style={{ height: '100%' }}>\r\n            <CardHeader title=\"Avg Points\" />\r\n            <CardContent>\r\n                <LineChart data={chartData} options={options} />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\ninterface RouterProps {\r\n    teamname: string;\r\n}\r\n\r\nconst MilaPlayerPage = ({ match }: RouteComponentProps<RouterProps>) => {\r\n    const [results, setResults] = useState<GameWeekResult[] | undefined>();\r\n\r\n    useEffect(() => {\r\n        async function getMilaResults() {\r\n            const res = await GetMilaResults();\r\n            const resultsForPlayer = res?.resultsByUser\r\n                .find(r => r.teamName === match.params.teamname)?.results\r\n            setResults(resultsForPlayer);\r\n        }\r\n\r\n        getMilaResults();\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item md={4}>\r\n                <Card style={{ height: \"100%\" }}>\r\n                    <CardHeader title={match.params.teamname} />\r\n                    <CardContent>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>GW</TableCell>\r\n                                    <TableCell align=\"right\">Pts</TableCell>\r\n                                    <TableCell align=\"right\">Avg</TableCell>\r\n                                    <TableCell align=\"right\">Tot</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    results?.concat()\r\n                                        .sort((a: GameWeekResult, b: GameWeekResult) => b.gameWeek - a.gameWeek)\r\n                                        .map(r => (\r\n                                            <TableRow key={r.gameWeek}>\r\n                                                <TableCell>{`Game Week ${r.gameWeek}`}</TableCell>\r\n                                                <TableCell align=\"right\">{r.milaPoints.total}</TableCell>\r\n                                                <TableCell align=\"right\">{r.cumulativeAverageMilaPoints}</TableCell>\r\n                                                <TableCell align=\"right\">{r.cumulativeMilaPoints}</TableCell>\r\n                                            </TableRow>\r\n                                        ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item md={8}>\r\n                <PlayerStandingsChart\r\n                    results={results}\r\n                    teamname={match.params.teamname} />\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default withRouter(MilaPlayerPage);","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Card, CardContent, CardHeader, Table, TableHead,\r\n    TableBody, TableCell, TableRow, TableContainer, Box, Select, MenuItem, Toolbar, Tooltip\r\n} from '@material-ui/core';\r\nimport { MilaResultsDTO } from '../Api/Dtos/ApiDtos';\r\nimport { GetMilaResults } from '../Api/api';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { ArrowDropDownOutlined, ArrowDropUpOutlined } from '@material-ui/icons';\r\nimport theme from '../theme';\r\n\r\nconst LightToolTip = withStyles((theme) => ({\r\n    tooltip: {\r\n        //backgroundColor: theme.palette.common.white,\r\n        backgroundColor: theme.palette.warning.light,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 11,\r\n    },\r\n}))(Tooltip);\r\n\r\nconst StandingsPage = () => {\r\n    const [milaResults, setMilaResults] = useState<MilaResultsDTO | undefined>();\r\n    const [currentGameWeek, setCurrentGameweek] = useState(0);\r\n    const results = currentGameWeek === 0\r\n        ? milaResults?.overallScore\r\n        : milaResults?.resultsByWeek[currentGameWeek - 1]?.results;\r\n\r\n    results?.sort((n1, n2) => n2.cumulativeMilaPoints - n1.cumulativeMilaPoints);\r\n\r\n    useEffect(() => {\r\n        async function getMilaResults(): Promise<void> {\r\n            const res = await GetMilaResults();\r\n            setMilaResults(res);\r\n        }\r\n\r\n        getMilaResults();\r\n    }, []);\r\n\r\n    return (\r\n        <Card style={{ height: '100%' }}>\r\n            <Toolbar disableGutters>\r\n                <CardHeader title={`Standings - ${currentGameWeek === 0 ? 'Overall' : (`Game Week ${currentGameWeek}`)}`} />\r\n\r\n                <section style={{ marginLeft: 'auto', marginRight: '20px' }}>\r\n                    <Select\r\n                        value={currentGameWeek}\r\n                        style={{ marginBottom: '10px' }}\r\n                        onChange={(event: React.ChangeEvent<{\r\n                            name?: string | undefined;\r\n                            value: unknown;\r\n                        }>): void => setCurrentGameweek(Number(event.target.value))}\r\n                    >\r\n                        <MenuItem value={0}>Overall</MenuItem>\r\n                        {\r\n                            milaResults?.resultsByWeek\r\n                                .map((m) => (\r\n                                    <MenuItem key={m.gameWeek} value={m.gameWeek}>Game Week {m.gameWeek}</MenuItem>\r\n                                ))\r\n                        }\r\n                    </Select>\r\n                </section>\r\n            </Toolbar>\r\n\r\n            <CardContent>\r\n                <TableContainer>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Rank</TableCell>\r\n                                <TableCell>Team</TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Sweet 69: 6.9 pts if GW Score is 69\" placement=\"top\"><div>69</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Yellow Card: 1 pt each\" placement=\"top\"><div>YC</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Red Card: 3 pts each\" placement=\"top\"><div>RC</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Bench Fail: -1 pt per 5 pts on bench\" placement=\"top\"><div>BF</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Cap Fail: -1 pt if captain scores less than 5 pts\" placement=\"top\"><div>CF</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Cap GoalKeeper: 2 pts\" placement=\"top\"><div>CK</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Cap Defender: 1 pt\" placement=\"top\"><div>CD</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Minus is Plus: every negative point is positive\" placement=\"top\"><div>MiP</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Increase Streak: 1 pt if higher score than previous GW\" placement=\"top\"><div>IS</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Equal Streak: 6.9 pts if same score as previous GW\" placement=\"top\"><div>ES</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"GW Position Score: 4 pts FPL GW winner, then decreasing with 0.5\" placement=\"top\"><div>GW PS</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Head 2 Head Meta: 2 point for winning H2H with 2 or less points\" placement=\"top\"><div>H2H M</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Sixty Nine Sub: 2.69 points if at least one player played 69 minutes \" placement=\"top\"><div>69 Sub</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Unique Cap: 2 pts if you have a captain no one else had\" placement=\"top\"><div>Unq Cap</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"Trendy Bitch: -1 point if you bought most transferred in player and -1 point if you sold most transferred out player.\" placement=\"top\"><div>Trnd</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"center\"><LightToolTip title=\"GW Mila Points\" placement=\"top\"><div>GW MP</div></LightToolTip></TableCell>\r\n                                <TableCell align=\"right\"><LightToolTip title=\"Total Mila Points\" placement=\"top\"><div>Total MP</div></LightToolTip></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                results\r\n                                && results.map((r, i) => {\r\n                                    const deltaPosition = r.milaRankLastWeek === null || r.milaRankLastWeek === undefined ? 0 : (r.milaRankLastWeek - r.milaRank);\r\n                                    return (\r\n                                        <TableRow key={r.teamName}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                <Box display=\"flex\" alignItems=\"center\">\r\n                                                    {`${i + 1}.`}\r\n                                                    {\r\n                                                        deltaPosition < 0 &&\r\n                                                        <Box display=\"flex\" alignItems=\"center\"\r\n                                                            style={{ color: \"red\" }}>\r\n                                                            <ArrowDropDownOutlined />\r\n                                                            ({deltaPosition})\r\n                                                        </Box>\r\n                                                    }\r\n                                                    {\r\n                                                        deltaPosition > 0 &&\r\n                                                        <Box display=\"flex\" alignItems=\"center\"\r\n                                                            style={{ color: theme.palette.primary.dark }}>\r\n                                                            <ArrowDropUpOutlined />\r\n                                                            ({deltaPosition})\r\n                                                        </Box>\r\n                                                    }\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                {r.teamName}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.gW69}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.yellowCard}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.redCard}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.benchFail}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.capFail}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.capKeep}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.capDef}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.minusIsPlus}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.increaseStreak}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.equalStreak}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.gwPositionScore}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.headToHeadMeta}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.sixtyNineSub}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.uniqueCap}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.trendyBitch}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {r.milaPoints.total}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {r.cumulativeMilaPoints}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default StandingsPage;\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { Container, Typography, Button, IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport theme from './theme';\r\n\r\nconst Navbar = ({\r\n  location\r\n}: RouteComponentProps) => {\r\n  return (\r\n    <AppBar position=\"static\" style={{ background: theme.palette.background.default, boxShadow: 'none', borderBottom: 'none' }}>\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n            <Typography color=\"textPrimary\" style={{ textDecoration: 'none' }} component={Link} to=\"/\" variant=\"h5\">\r\n              Milabowl\r\n            </Typography>\r\n            <section style={{ marginLeft: 'auto' }}>\r\n              <Typography color=\"textPrimary\" style={{\r\n                textDecoration: 'none',\r\n                fontWeight: 700,\r\n                padding: '10px',\r\n                borderRadius: '10px',\r\n                background: location.pathname === '/standings' ? 'rgba(0,0,0,0.05)' : 'none',\r\n              }} component={Link} to=\"standings\">\r\n                Standings\r\n              </Typography>      \r\n            </section>\r\n        </Toolbar>\r\n      </Container>\r\n  </AppBar>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import React from 'react';\r\nimport {\r\n  HashRouter as Router, Switch, Route, RouteComponentProps\r\n} from 'react-router-dom';\r\nimport Container from '@material-ui/core/Container';\r\nimport DashboardPage from './Pages/DashboardPage';\r\nimport MilaPlayerPage from './Pages/MilaPlayerPage';\r\nimport StandingsPage from './Pages/StandingsPage';\r\nimport Navbar from './Navbar';\r\nimport theme from './theme';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\ninterface PrivateRouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n  path: string;\r\n  exact?: boolean;\r\n  accessToken: string | undefined;\r\n}\r\nfunction App() {\r\n  const isXsScreen = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\" style={{ background: theme.palette.background.default }}>\r\n        <Navbar />\r\n        <Container maxWidth=\"xl\" disableGutters={isXsScreen} style={{ marginTop: '20px' }}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={DashboardPage} />\r\n            <Route path=\"/milabowl\" component={DashboardPage} />\r\n            <Route path=\"/standings\" component={StandingsPage} />\r\n            <Route path=\"/mila-player/:teamname\" component={MilaPlayerPage} />\r\n          </Switch>\r\n        </Container>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </ThemeProvider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}