---
import game_state from "../../../src/game_state/game_state.json";
import type { MilaResultsDTO, ResultsByUser } from "../../../src/game_state/gameState";
import Layout from "../../layouts/Layout.astro";
import Grid from "../../components/core/Grid/Grid.astro";
import Col from "../../components/core/Grid/Col.astro";
import Table from "../../components/core/Table/Table.astro";
import Card from "../../components/core/Card.astro";
import PlayerStandingsChart from "./PlayerStandingsChart";

interface Props{
    userResults: ResultsByUser;
}

export function getStaticPaths() {
  const gameState: MilaResultsDTO = game_state;
  const paths = gameState.resultsByUser.map(r => (
    { 
      params: { player: encodeURIComponent(r.teamName.replaceAll(" ", ""))},
      props: { userResults: r }
    }));
  return paths;
}

const gameState: MilaResultsDTO = game_state;
const { userResults } = Astro.props;
---
<Layout title={`${userResults.teamName} - details`}>
  <Grid>
    <Col col={4}>
      <Card title={userResults.teamName}>
        <Table>
          <tr slot="header">
            <th>GW</th>
            <th class="right-align">Pts</th>
            <th class="right-align">Avg</th>
            <th class="right-align">Tot</th>
          </tr>							
  
          {
            userResults.results.map((r, i) => (
              <tr>
                <td>{`Game Week ${r.gameWeek}`}</td>
                <td class="right-align">{r.milaPoints.total}</td>
                <td class="right-align">{r.cumulativeAverageMilaPoints}</td>
                <td class="right-align">{r.cumulativeMilaPoints}</td>
              </tr>
            ))
          }
        </Table>
      </Card>
    </Col>
    <Col col={8}>
      <Card title="Avg. Points">
        <PlayerStandingsChart teamname={userResults.teamName} results={userResults.results} client:load/>
      </Card>
    </Col>
  </Grid>
</Layout>